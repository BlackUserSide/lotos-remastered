Index: src/components/CartContext/CartComponentContext.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useCallback, useEffect, useState } from \"react\";\nimport { CartContext, ICartContext, TDataCart } from \"./CartContext\";\n\nexport const CartComponentContext: React.FC = ({ children }) => {\n  const [dataCart, setDataCart] = useState<TDataCart[]>([]);\n  const [countCart, setCountCart] = useState<number>(0);\n\n  const val: ICartContext = {\n    dataCart: dataCart,\n    clearCart: () => {\n      localStorage.removeItem(\"cart\");\n      window.location.reload();\n    },\n    changeAmount: (id: number, amount: number) => {\n      let tmpData = localStorage.getItem(\"cart\");\n      if (tmpData !== null) {\n        let parseData: TDataCart[] = JSON.parse(tmpData);\n        let newData = parseData.map((k) => {\n          if (k.id === id) {\n            k.amount = amount;\n          }\n          return k;\n        });\n        console.log(newData);\n\n        localStorage.setItem(\"cart\", JSON.stringify(newData));\n        updateDataCart();\n      }\n    },\n    deleteItem: (id: number) => {\n      const newArr = dataCart.filter((e) => e.id !== id);\n      localStorage.removeItem(\"cart\");\n      localStorage.setItem(\"cart\", JSON.stringify(newArr));\n      setDataCart(newArr);\n      window.location.reload();\n    },\n    countCart: countCart,\n    addCart: (id, amount) => {\n      const findElement = dataCart.find((e) => {\n        if (e.id === id) {\n          return e;\n        }\n        return null;\n      });\n      if (findElement) {\n        const newArray = dataCart.map((e) => {\n          if (e.id === id) {\n            e.amount += amount;\n            return e;\n          }\n          return e;\n        });\n        localStorage.removeItem(\"cart\");\n        localStorage.setItem(\"cart\", JSON.stringify(newArray));\n        setDataCart(newArray);\n      } else {\n        if (dataCart.length > 0) {\n          let newArr = dataCart;\n          newArr.push({ id: id, amount: amount });\n          localStorage.removeItem(\"cart\");\n          localStorage.setItem(\"cart\", JSON.stringify(newArr));\n          setDataCart(newArr);\n        } else {\n          let newCart: TDataCart[] = [];\n          newCart.push({ id: id, amount: amount });\n          localStorage.removeItem(\"cart\");\n          localStorage.setItem(\"cart\", JSON.stringify(newCart));\n          setDataCart(newCart);\n        }\n      }\n      updateCountWrapepr();\n    },\n  };\n\n  const updateCountWrapepr = useCallback(() => {\n    let localData = localStorage.getItem(\"cart\");\n    if (localData !== null) {\n      const parseData: TDataCart[] = JSON.parse(localData);\n      setDataCart(parseData);\n      let tmp = 0;\n      parseData.map((e) => {\n        tmp += e.amount;\n        return e;\n      });\n      setCountCart(tmp);\n      return;\n    } else {\n      setCountCart(0);\n    }\n  }, []);\n  const updateDataCart = useCallback(() => {\n    const localData = localStorage.getItem(\"cart\");\n    if (localData) {\n      const parseData = JSON.parse(localData);\n      setDataCart(parseData);\n    }\n  }, []);\n  useEffect(() => {\n    updateCountWrapepr();\n    updateDataCart();\n  }, [updateCountWrapepr, updateDataCart]);\n\n  return (\n    <>\n      <CartContext.Provider value={val}>{children}</CartContext.Provider>\n    </>\n  );\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/CartContext/CartComponentContext.tsx b/src/components/CartContext/CartComponentContext.tsx
--- a/src/components/CartContext/CartComponentContext.tsx	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/src/components/CartContext/CartComponentContext.tsx	(date 1639414643070)
@@ -27,6 +27,7 @@
         updateDataCart();
       }
     },
+
     deleteItem: (id: number) => {
       const newArr = dataCart.filter((e) => e.id !== id);
       localStorage.removeItem("cart");
Index: src/components/CabinetPage/StructurePage/StructurePage.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { Link } from \"react-router-dom\";\n//import { getDataStructure } from \"../../api/structure\";\nimport \"./structurepage.sass\";\nimport { IDataUser, IMainDataStructure } from \"./types\";\nimport { useHistory } from \"react-router\";\nimport { getDataUser } from \"../../api/user\";\n//import { getDataStrForUser } from \"../../function/getDataStrForUser\";\n\nimport { StructureContext } from \"./StructureContext/StructureContext\";\n\nexport const StructurePage: React.FC = () => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { dataStructure, newDataStruct } = useContext(StructureContext);\n  let history = useHistory();\n  const [dataStruct, setDataStruct] = useState<Array<IMainDataStructure>>([]);\n  const [dataUser, setDataUser] = useState<IDataUser>({\n    firstName: \"\",\n    lastName: \"\",\n    surname: \"\",\n    id: 0,\n  });\n  const [activeId, setActiveId] = useState<number[]>([]);\n  const updateWrapper = useCallback(() => {\n    if (dataStructure) {\n      if (dataStructure.length > 0) {\n        setDataStruct(dataStructure);\n      }\n    }\n  }, [dataStructure]);\n  useEffect(() => {\n    updateWrapper();\n  }, [updateWrapper]);\n  useEffect(() => {\n    getDataUser()\n      .then((res) => {\n        if (res) {\n          switch (res.status) {\n            case 200:\n              setDataUser(res.data[0]);\n              break;\n            case 422:\n              history.push(\"/login\");\n              break;\n          }\n        }\n      })\n      .catch((err) => console.log(err));\n  }, [history]);\n\n  const getHandlerStructure: any = (id: number, idLine: number) => {\n    if (activeId.length === 0) {\n      let newActive: number[] = [];\n      newActive.push(id);\n      setActiveId(newActive);\n    } else {\n      let newActive: number[] = activeId;\n      for (let i = 0; activeId.length >= i; i++) {\n        if (!newActive[idLine]) {\n          newActive.push(id);\n        } else {\n          console.log(1332);\n\n          newActive[idLine] = id;\n        }\n      }\n      setActiveId(newActive);\n    }\n\n    if (newDataStruct) {\n      newDataStruct(id, idLine);\n    }\n  };\n\n  return (\n    <div className=\"structure-page-wrapper\">\n      <div className=\"link-wrapper-navigation\">\n        <div className=\"container-navigatin-link\">\n          <Link to=\"/cabinet/home\" className=\"main-link-navigation\">\n            Головна\n          </Link>\n          <span>/</span>\n          <Link to=\"/cabinet/business\" className=\"active-link\">\n            Моя структура\n          </Link>\n        </div>\n      </div>\n      <div className=\"structure-wrapper\">\n        <div className=\"top-line-wrapper\">\n          <h1 className=\"h1\">Моя структура</h1>\n          <p>Людей у структурі: Не разраховано</p>\n          <p>Загальний обсяг: Не разраховано</p>\n        </div>\n        <div className=\"structure-container\">\n          <div className=\"line-my-wrapper\">\n            <div className=\"item-line-wrapper-user\">\n              <div className=\"top-line-user\">\n                <div className=\"user-icon\">\n                  <div className=\"image-wrapper\">\n                    <svg\n                      width=\"16\"\n                      height=\"17\"\n                      viewBox=\"0 0 16 17\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        clipRule=\"evenodd\"\n                        d=\"M8 6.8C8.90931 6.8 9.78139 6.44179 10.4244 5.80416C11.0673 5.16654 11.4286 4.30174 11.4286 3.4C11.4286 2.49826 11.0673 1.63346 10.4244 0.995837C9.78139 0.358213 8.90931 0 8 0C7.09069 0 6.21862 0.358213 5.57563 0.995837C4.93265 1.63346 4.57143 2.49826 4.57143 3.4C4.57143 4.30174 4.93265 5.16654 5.57563 5.80416C6.21862 6.44179 7.09069 6.8 8 6.8ZM0 17C-1.56548e-08 15.9582 0.206926 14.9266 0.608964 13.964C1.011 13.0015 1.60028 12.127 2.34315 11.3903C3.08601 10.6536 3.96793 10.0692 4.93853 9.67056C5.90914 9.27187 6.94943 9.06667 8 9.06667C9.05058 9.06667 10.0909 9.27187 11.0615 9.67056C12.0321 10.0692 12.914 10.6536 13.6569 11.3903C14.3997 12.127 14.989 13.0015 15.391 13.964C15.7931 14.9266 16 15.9582 16 17H0Z\"\n                        fill=\"#1FBB83\"\n                      />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"name-wrapper\">\n                  <p>{`${dataUser.surname} ${dataUser.firstName} ${dataUser.lastName}`}</p>\n                  <span>{dataUser.id}</span>\n                </div>\n              </div>\n              <div className=\"info-wrapper-item\">\n                <p>ВО: Lt</p>\n                <p></p>\n              </div>\n            </div>\n          </div>\n          {dataStruct.length > 0 ? (\n            <div className=\"handle-wrapper-struct\">\n              {dataStruct.map((e, i) => (\n                <div className=\"line-wrapper-offside\" key={i}>\n                  {e.data !== undefined\n                    ? e.data.map((k, o) => (\n                        <div\n                          className={`item-line-wrapper-user ${\n                            activeId.find((a) => a === k.id)\n                              ? \"active-wrapper-user\"\n                              : \"\"\n                          }`}\n                          key={o}\n                          onClick={() => {\n                            getHandlerStructure(k.id, e.id);\n                          }}\n                        >\n                          <div className=\"top-line-user\">\n                            <div className=\"user-icon\">\n                              <div className=\"image-wrapper\">\n                                <svg\n                                  width=\"16\"\n                                  height=\"17\"\n                                  viewBox=\"0 0 16 17\"\n                                  fill=\"none\"\n                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                  <path\n                                    fillRule=\"evenodd\"\n                                    clipRule=\"evenodd\"\n                                    d=\"M8 6.8C8.90931 6.8 9.78139 6.44179 10.4244 5.80416C11.0673 5.16654 11.4286 4.30174 11.4286 3.4C11.4286 2.49826 11.0673 1.63346 10.4244 0.995837C9.78139 0.358213 8.90931 0 8 0C7.09069 0 6.21862 0.358213 5.57563 0.995837C4.93265 1.63346 4.57143 2.49826 4.57143 3.4C4.57143 4.30174 4.93265 5.16654 5.57563 5.80416C6.21862 6.44179 7.09069 6.8 8 6.8ZM0 17C-1.56548e-08 15.9582 0.206926 14.9266 0.608964 13.964C1.011 13.0015 1.60028 12.127 2.34315 11.3903C3.08601 10.6536 3.96793 10.0692 4.93853 9.67056C5.90914 9.27187 6.94943 9.06667 8 9.06667C9.05058 9.06667 10.0909 9.27187 11.0615 9.67056C12.0321 10.0692 12.914 10.6536 13.6569 11.3903C14.3997 12.127 14.989 13.0015 15.391 13.964C15.7931 14.9266 16 15.9582 16 17H0Z\"\n                                    fill=\"#828282\"\n                                  />\n                                </svg>\n                              </div>\n                            </div>\n                            <div className=\"name-wrapper\">\n                              <p>{`${k.surname} ${k.firstName} ${k.lastName}`}</p>\n                              <span>{k.id}</span>\n                            </div>\n                          </div>\n                          <div className=\"info-wrapper-item\">\n                            <p>ВО: 2 000 Lt</p>\n                            <p>Запрошено людей: 11</p>\n                          </div>\n                        </div>\n                      ))\n                    : \"\"}\n                </div>\n              ))}\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div ref={ref}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/CabinetPage/StructurePage/StructurePage.tsx b/src/components/CabinetPage/StructurePage/StructurePage.tsx
--- a/src/components/CabinetPage/StructurePage/StructurePage.tsx	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/src/components/CabinetPage/StructurePage/StructurePage.tsx	(date 1639415807214)
@@ -8,25 +8,36 @@
 import { Link } from "react-router-dom";
 //import { getDataStructure } from "../../api/structure";
 import "./structurepage.sass";
-import { IDataUser, IMainDataStructure } from "./types";
-import { useHistory } from "react-router";
-import { getDataUser } from "../../api/user";
+import { IMainDataStructure } from "./types";
+//import { useHistory } from "react-router";
+
 //import { getDataStrForUser } from "../../function/getDataStrForUser";
 
 import { StructureContext } from "./StructureContext/StructureContext";
+//import { useDispatch, useSelector } from "react-redux";
+import { RootState } from "../../../redux/rootReducer";
+import { useSelector } from "react-redux";
+//import { updateDataStructure } from "../../../redux/Cabinet/action";
 
 export const StructurePage: React.FC = () => {
+  if (process.env.NODE_ENV !== "production") {
+    const { whyDidYouUpdate } = require("why-did-you-update");
+    whyDidYouUpdate(React);
+  }
   const ref = useRef<HTMLDivElement>(null);
+
   const { dataStructure, newDataStruct } = useContext(StructureContext);
-  let history = useHistory();
+  //let history = useHistory();
   const [dataStruct, setDataStruct] = useState<Array<IMainDataStructure>>([]);
-  const [dataUser, setDataUser] = useState<IDataUser>({
-    firstName: "",
-    lastName: "",
-    surname: "",
-    id: 0,
-  });
+  //REDUX----------------
+  const dataUser = useSelector((state: RootState) => state.cabinet.dataUser);
+  //const dispatch = useDispatch();
+  const dataStructureTest = useSelector(
+    (state: RootState) => state.cabinet.dataStructure
+  );
+  //REDUX----------------
   const [activeId, setActiveId] = useState<number[]>([]);
+
   const updateWrapper = useCallback(() => {
     if (dataStructure) {
       if (dataStructure.length > 0) {
@@ -34,26 +45,29 @@
       }
     }
   }, [dataStructure]);
+  // useEffect(() => {
+  //   dispatch(updateDataStructure(dataStructureTest));
+  // }, [dispatch]);
+  console.log(dataStructureTest);
   useEffect(() => {
     updateWrapper();
   }, [updateWrapper]);
-  useEffect(() => {
-    getDataUser()
-      .then((res) => {
-        if (res) {
-          switch (res.status) {
-            case 200:
-              setDataUser(res.data[0]);
-              break;
-            case 422:
-              history.push("/login");
-              break;
-          }
-        }
-      })
-      .catch((err) => console.log(err));
-  }, [history]);
-
+  // useEffect(() => {
+  //   getDataUser()
+  //     .then((res) => {
+  //       if (res) {
+  //         switch (res.status) {
+  //           case 200:
+  //             setDataUser(res.data[0]);
+  //             break;
+  //           case 422:
+  //             history.push("/login");
+  //             break;
+  //         }
+  //       }
+  //     })
+  //     .catch((err) => console.log(err));
+  // }, [history]);
   const getHandlerStructure: any = (id: number, idLine: number) => {
     if (activeId.length === 0) {
       let newActive: number[] = [];
@@ -126,7 +140,6 @@
               </div>
               <div className="info-wrapper-item">
                 <p>ВО: Lt</p>
-                <p></p>
               </div>
             </div>
           </div>
@@ -184,6 +197,7 @@
           ) : (
             ""
           )}
+
           <div ref={ref}></div>
         </div>
       </div>
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"name\": \"lotos-remastered\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@testing-library/jest-dom\": \"^5.14.1\",\n    \"@testing-library/react\": \"^11.2.7\",\n    \"@testing-library/user-event\": \"^12.8.3\",\n    \"@types/axios\": \"^0.14.0\",\n    \"@types/jest\": \"^26.0.24\",\n    \"@types/node\": \"^12.20.28\",\n    \"@types/react\": \"^17.0.27\",\n    \"@types/react-dom\": \"^17.0.9\",\n    \"@types/react-input-mask\": \"^3.0.1\",\n    \"@types/react-router-dom\": \"^5.3.1\",\n    \"@types/react-transition-group\": \"^4.4.4\",\n    \"@types/redux\": \"^3.6.0\",\n    \"crypto\": \"^1.0.1\",\n    \"js-base64\": \"^3.7.2\",\n    \"node-sass\": \"^6.0.1\",\n    \"react\": \"^17.0.2\",\n    \"react-dom\": \"^17.0.2\",\n    \"react-input-mask\": \"^2.0.4\",\n    \"react-redux\": \"^7.2.6\",\n    \"react-router-dom\": \"^5.3.0\",\n    \"react-scripts\": \"4.0.3\",\n    \"react-transition-group\": \"^4.4.2\",\n    \"redux\": \"^4.1.2\",\n    \"redux-thunk\": \"^2.4.1\",\n    \"typescript\": \"^4.4.3\",\n    \"web-vitals\": \"^1.1.2\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"react-app\",\n      \"react-app/jest\"\n    ]\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  },\n  \"devDependencies\": {\n    \"prettier\": \"2.5.1\",\n    \"redux-devtools-extension\": \"^2.13.9\"\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/package.json	(date 1639415234378)
@@ -28,7 +28,8 @@
     "redux": "^4.1.2",
     "redux-thunk": "^2.4.1",
     "typescript": "^4.4.3",
-    "web-vitals": "^1.1.2"
+    "web-vitals": "^1.1.2",
+    "why-did-you-update": "^1.0.8"
   },
   "scripts": {
     "start": "react-scripts start",
Index: src/components/CabinetPage/CabinetPage.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useEffect } from \"react\";\nimport { Switch, useHistory } from \"react-router\";\nimport { RouteWithSubRoutes } from \"../../routes/RouteWithSubRoutes\";\n//import { Footer } from \"../MainPage/Footer/Footer\";\nimport { Header } from \"../MainPage/Header/Header\";\nimport { MainCabinetLink } from \"./HomeCabinet/MainCabinetLink/MainCabinetLink\";\nimport { useDispatch } from \"react-redux\";\nimport { saveUserData } from \"../../redux/Cabinet/action\";\ntype IProms = {\n  routes: any;\n};\nexport const CabinetPage: React.FC<IProms> = ({ routes }) => {\n  let history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (localStorage.getItem(\"token\") !== null) {\n      let dataPath = history.location.pathname.split(\"/\");\n      dataPath.shift();\n      if (dataPath.length === 1) {\n        history.push(\"/cabinet/home\");\n      }\n      dispatch(saveUserData());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [history, dispatch]);\n  return (\n    <>\n      <Header />\n      {localStorage.getItem(\"token\") !== null ? (\n        <div className=\"cabinet-wrapper-main\">\n          <MainCabinetLink />\n          <Switch>\n            {routes\n              ? routes.map((route: any, i: any) => (\n                  <RouteWithSubRoutes key={i} {...route} />\n                ))\n              : \"\"}\n          </Switch>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {/* <Footer /> */}\n    </>\n  );\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/CabinetPage/CabinetPage.tsx b/src/components/CabinetPage/CabinetPage.tsx
--- a/src/components/CabinetPage/CabinetPage.tsx	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/src/components/CabinetPage/CabinetPage.tsx	(date 1639415905324)
@@ -12,6 +12,7 @@
 export const CabinetPage: React.FC<IProms> = ({ routes }) => {
   let history = useHistory();
   const dispatch = useDispatch();
+
   useEffect(() => {
     if (localStorage.getItem("token") !== null) {
       let dataPath = history.location.pathname.split("/");
Index: src/redux/Cabinet/cabinetReducer.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IActionCabinet, IStateCabinet } from \"./type\";\nimport { SAVE_USER_DATA } from \"./actionConst\";\n\nconst initState: IStateCabinet = {\n  dataUser: {\n    firstName: \"\",\n    phone: \"\",\n    surname: \"\",\n    lastName: \"\",\n    email: \"\",\n  },\n  dataStructure: [],\n};\nexport const cabinetReducer = (\n  state: IStateCabinet = initState,\n  action: IActionCabinet\n): IStateCabinet => {\n  switch (action.type) {\n    case SAVE_USER_DATA:\n      return { ...state, dataUser: action.payload };\n    default:\n      return state;\n  }\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/redux/Cabinet/cabinetReducer.ts b/src/redux/Cabinet/cabinetReducer.ts
--- a/src/redux/Cabinet/cabinetReducer.ts	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/src/redux/Cabinet/cabinetReducer.ts	(date 1639414097008)
@@ -1,5 +1,5 @@
 import { IActionCabinet, IStateCabinet } from "./type";
-import { SAVE_USER_DATA } from "./actionConst";
+import { SAVE_USER_DATA, UPDATE_STRUCTURE_DATA } from "./actionConst";
 
 const initState: IStateCabinet = {
   dataUser: {
@@ -8,8 +8,10 @@
     surname: "",
     lastName: "",
     email: "",
+    id: 0,
   },
   dataStructure: [],
+  loader: false,
 };
 export const cabinetReducer = (
   state: IStateCabinet = initState,
@@ -17,7 +19,11 @@
 ): IStateCabinet => {
   switch (action.type) {
     case SAVE_USER_DATA:
-      return { ...state, dataUser: action.payload };
+      //eslint-disable-next-line
+      return <IStateCabinet>{ ...state, dataUser: action.payload };
+    case UPDATE_STRUCTURE_DATA:
+      //eslint-disable-next-line
+      return <IStateCabinet>{ ...state, dataStructure: action.payload };
     default:
       return state;
   }
Index: src/redux/Cabinet/actionConst.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const SAVE_USER_DATA = \"SAVE_USER_DATA\";\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/redux/Cabinet/actionConst.ts b/src/redux/Cabinet/actionConst.ts
--- a/src/redux/Cabinet/actionConst.ts	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/src/redux/Cabinet/actionConst.ts	(date 1639413110923)
@@ -1,1 +1,3 @@
 export const SAVE_USER_DATA = "SAVE_USER_DATA";
+export const UPDATE_STRUCTURE_DATA = "UPDATE_STRUCTURE_DATA";
+export const GET_STRUCTURE_DATA = "GET_STRUCTURE_DATA";
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
--- a/package-lock.json	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/package-lock.json	(date 1639415234537)
@@ -12122,6 +12122,11 @@
       "resolved": "https://registry.npmjs.org/react-error-overlay/-/react-error-overlay-6.0.9.tgz",
       "integrity": "sha512-nQTTcUu+ATDbrSD1BZHr5kgSD4oF8OFjxun8uAaL8RwPBacGBNPf/yAuVVdx17N8XNzRDMrZ9XcKZHCjPW+9ew=="
     },
+    "react-fast-compare": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/react-fast-compare/-/react-fast-compare-2.0.4.tgz",
+      "integrity": "sha512-suNP+J1VU1MWFKcyt7RtjiSWUjvidmQSlqu+eHslq+342xCbGTYmC0mEhPCOHxlW0CywylOC1u2DFAT+bv4dBw=="
+    },
     "react-input-mask": {
       "version": "2.0.4",
       "resolved": "https://registry.npmjs.org/react-input-mask/-/react-input-mask-2.0.4.tgz",
@@ -15926,6 +15931,15 @@
       "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
       "integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
     },
+    "why-did-you-update": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/why-did-you-update/-/why-did-you-update-1.0.8.tgz",
+      "integrity": "sha512-P1m7cho3o+otR8+WvHYrM+SJHCdvhS+FI6NOwZm6JNdhItbDnuZFD9uxvKIQYXxAkBV5qJtCNF/e2RwCDeAV5g==",
+      "requires": {
+        "lodash": "^4.17.11",
+        "react-fast-compare": "^2.0.4"
+      }
+    },
     "wide-align": {
       "version": "1.1.5",
       "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.5.tgz",
Index: src/redux/Cabinet/type.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IDataStructure } from \"../../components/CabinetPage/StructurePage/types\";\n\nexport interface IStateCabinet {\n  dataUser: IDataUserRedux;\n  dataStructure: IDataStructure[];\n}\n\nexport interface IDataUserRedux {\n  firstName: string;\n  lastName: string;\n  surname: string;\n  phone: string;\n  email: string;\n}\nexport interface IActionCabinet {\n  type: string;\n  payload: IDataUserRedux;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/redux/Cabinet/type.ts b/src/redux/Cabinet/type.ts
--- a/src/redux/Cabinet/type.ts	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/src/redux/Cabinet/type.ts	(date 1639413692671)
@@ -1,8 +1,9 @@
-import { IDataStructure } from "../../components/CabinetPage/StructurePage/types";
+import { IMainDataStructure } from "../../components/CabinetPage/StructurePage/types";
 
 export interface IStateCabinet {
   dataUser: IDataUserRedux;
-  dataStructure: IDataStructure[];
+  dataStructure: IMainDataStructure[];
+  loader: boolean;
 }
 
 export interface IDataUserRedux {
@@ -11,8 +12,9 @@
   surname: string;
   phone: string;
   email: string;
+  id: number;
 }
 export interface IActionCabinet {
   type: string;
-  payload: IDataUserRedux;
+  payload: IDataUserRedux | IMainDataStructure[];
 }
Index: src/redux/Cabinet/action.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { getDataUser } from \"../../components/api/user\";\nimport { SAVE_USER_DATA } from \"./actionConst\";\n\nexport const saveUserData = () => {\n  return async (dispatch: any) => {\n    try {\n      const data = await getDataUser().then((res) => {\n        if (res) {\n          return res.data;\n        }\n      });\n      console.log(data[0]);\n      dispatch({ type: SAVE_USER_DATA, payload: data[0] });\n    } catch (e) {}\n  };\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/redux/Cabinet/action.ts b/src/redux/Cabinet/action.ts
--- a/src/redux/Cabinet/action.ts	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/src/redux/Cabinet/action.ts	(date 1639413857647)
@@ -1,5 +1,7 @@
 import { getDataUser } from "../../components/api/user";
-import { SAVE_USER_DATA } from "./actionConst";
+import { SAVE_USER_DATA, UPDATE_STRUCTURE_DATA } from "./actionConst";
+import { IMainDataStructure } from "../../components/CabinetPage/StructurePage/types";
+import { getDataStrForUser } from "../../components/function/getDataStrForUser";
 
 export const saveUserData = () => {
   return async (dispatch: any) => {
@@ -9,8 +11,19 @@
           return res.data;
         }
       });
-      console.log(data[0]);
+
       dispatch({ type: SAVE_USER_DATA, payload: data[0] });
     } catch (e) {}
   };
 };
+export const updateDataStructure = (dataStructure: IMainDataStructure[]) => {
+  return async (dispatch: any) => {
+    const data = await getDataStrForUser(0, 0, dataStructure).then((res) => {
+      if (res) {
+        return res;
+      }
+    });
+
+    dispatch({ type: UPDATE_STRUCTURE_DATA, payload: data });
+  };
+};
Index: src/components/CabinetPage/ProfilePage/ProfilePage.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./profilepage.sass\";\nimport image1 from \"../../../img/iconCabinet/iconProfile/1.png\";\n//import image2 from \"../../../img/iconCabinet/iconProfile/2.png\";\nimport image3 from \"../../../img/iconCabinet/iconProfile/3.png\";\nimport image4 from \"../../../img/iconCabinet/iconProfile/4.png\";\nimport image5 from \"../../../img/iconCabinet/iconProfile/5.png\";\nimport editIcon from \"../../../img/iconCabinet/iconProfile/edit.png\";\nimport { getDataUser } from \"../../api/user\";\nimport { IDataProfile } from \"./type\";\nimport { useHistory } from \"react-router\";\nimport { ChangePass } from \"../../ui/ChangePass/ChangePass\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../redux/rootReducer\";\nexport const ProfilePage: React.FC = () => {\n  let history = useHistory();\n  // const [dataUser, setDataUser] = useState<IDataProfile>({\n  //   firstName: \"\",\n  //   lastName: \"\",\n  //   surname: \"\",\n  //   phone: \"\",\n  //   email: \"\",\n  // });\n  const dataUser = useSelector((state: RootState) => state.cabinet.dataUser);\n  const [activeChange, setActiveChange] = useState<boolean>(false);\n  const changeHandler = () => {\n    if (activeChange) {\n      setActiveChange(false);\n      return;\n    }\n    setActiveChange(true);\n  };\n\n  return (\n    <div className=\"profile-page\">\n      <div className=\"link-wrapper-navigation\">\n        <div className=\"container-navigatin-link\">\n          <Link to=\"/cabinet/home\" className=\"main-link-navigation\">\n            Головна\n          </Link>\n          <span>/</span>\n          <Link to=\"/cabinet/profile\" className=\"active-link\">\n            Мій профіль\n          </Link>\n        </div>\n      </div>\n      <div className=\"top-line-wrapper-profile\">\n        <h1 className=\"h1\">Мій профіль</h1>\n      </div>\n      <div className=\"profile-main-wrapper\">\n        <div className=\"container-profile-section\">\n          <div className=\"first-section-profile\">\n            <div className=\"top-line-wrapper\">\n              <p>Особисті дані</p>\n            </div>\n            <div className=\"list-wrapper-profile\">\n              <div className=\"list-item\">\n                <div className=\"image-wrapper\">\n                  <img src={image1} alt=\"\" />\n                </div>\n                <div className=\"text-compose\">\n                  <p>{`${dataUser.surname} ${dataUser.firstName} ${dataUser.lastName}`}</p>\n                </div>\n              </div>\n              {/* <div className=\"list-item\">\n                <div className=\"image-wrapper\">\n                  <img src={image2} alt=\"\" />\n                </div>\n                <div className=\"text-compose\">\n                  <p>20.05.1991 р.</p>\n                </div>\n              </div> */}\n              <div className=\"list-item\">\n                <div className=\"image-wrapper\">\n                  <img src={image3} alt=\"\" />\n                </div>\n                <div className=\"text-compose\">\n                  <p>{dataUser.phone}</p>\n                </div>\n              </div>\n              <div className=\"list-item\">\n                <div className=\"image-wrapper\">\n                  <img src={image4} alt=\"\" />\n                </div>\n                <div className=\"text-compose\">\n                  <p>{dataUser.email}</p>\n                </div>\n              </div>\n              <div className=\"list-item\">\n                <div className=\"image-wrapper\">\n                  <img src={image5} alt=\"\" />\n                </div>\n                <div className=\"text-compose\">\n                  <p>{\"********\"}</p>{\" \"}\n                  <img src={editIcon} alt=\"\" onClick={changeHandler} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"second-wrapper-profile\">\n            <div className=\"top-line-wrapper\">\n              <p>Особисті дані</p>\n              <span>Вкажіть вашу адресу для доставки за замовчуванням.</span>\n            </div>\n            <div className=\"input-container\">\n              <div className=\"input-wrapper\">\n                <input\n                  type=\"text\"\n                  name=\"city\"\n                  placeholder=\"Введіть населений пункт\"\n                />\n              </div>\n              <div className=\"input-wrapper\">\n                <input\n                  type=\"text\"\n                  name=\"numberPost\"\n                  placeholder=\"Введіть номер відділення Нової пошти\"\n                />\n              </div>\n              <div className=\"input-wrapper\">\n                <input\n                  type=\"text\"\n                  name=\"address\"\n                  placeholder=\"Введіть вашу адресу (індекс, вул, дім, квартира) \"\n                />\n              </div>\n            </div>\n            <div className=\"btn-wrapper-profile\">\n              <span>Зберегти нову адресу</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"story-shop-order-wrapper\">\n          <div className=\"top-line\">\n            <p>Мої замовлення</p>\n            <span>Дивитись історію замовлень</span>\n          </div>\n          <div className=\"container-content-shop-order\">\n            <div className=\"content-shop-wrapper\">\n              <table>\n                {/* <thead>\n                  <tr>\n                    <th>Номер замовлення</th>\n                    <th>Дата</th>\n                    <th>Ціна</th>\n                    <th>Статус</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>1</td>\n                    <td>2021-08-17</td>\n                    <td>2 002 грн.</td>\n                    <td>Доставляється</td>\n                  </tr>\n                  <tr>\n                    <td>1</td>\n                    <td>2021-05-17</td>\n                    <td>2 002 грн.</td>\n                    <td>Доставлено</td>\n                  </tr>\n                </tbody> */}\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n      {activeChange ? <ChangePass setActiveChange={setActiveChange} /> : \"\"}\n    </div>\n  );\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/CabinetPage/ProfilePage/ProfilePage.tsx b/src/components/CabinetPage/ProfilePage/ProfilePage.tsx
--- a/src/components/CabinetPage/ProfilePage/ProfilePage.tsx	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/src/components/CabinetPage/ProfilePage/ProfilePage.tsx	(date 1639417335344)
@@ -1,4 +1,4 @@
-import React, { useEffect, useState } from "react";
+import React, { useState } from "react";
 import { Link } from "react-router-dom";
 import "./profilepage.sass";
 import image1 from "../../../img/iconCabinet/iconProfile/1.png";
@@ -7,14 +7,14 @@
 import image4 from "../../../img/iconCabinet/iconProfile/4.png";
 import image5 from "../../../img/iconCabinet/iconProfile/5.png";
 import editIcon from "../../../img/iconCabinet/iconProfile/edit.png";
-import { getDataUser } from "../../api/user";
-import { IDataProfile } from "./type";
-import { useHistory } from "react-router";
+// import { getDataUser } from "../../api/user";
+// import { IDataProfile } from "./type";
+// import { useHistory } from "react-router";
 import { ChangePass } from "../../ui/ChangePass/ChangePass";
 import { useSelector } from "react-redux";
 import { RootState } from "../../../redux/rootReducer";
 export const ProfilePage: React.FC = () => {
-  let history = useHistory();
+  //let history = useHistory();
   // const [dataUser, setDataUser] = useState<IDataProfile>({
   //   firstName: "",
   //   lastName: "",
Index: src/routes/MainRouter.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useContext } from \"react\";\nimport { RouteWithSubRoutes } from \"./RouteWithSubRoutes\";\nimport { Switch } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { RoutesContext } from \"./RoutesContext\";\nimport { useLocation } from \"react-router-dom\";\nexport const MainRoutes = () => {\n  const { routes } = useContext(RoutesContext);\n  //console.log(process.env);\n  let location = useLocation();\n  return (\n    <>\n      <TransitionGroup>\n        <CSSTransition key={location.pathname} classNames=\"fade\" timeout={300}>\n          <Switch location={location}>\n            {routes\n              ? routes.map((route, i) => (\n                  <RouteWithSubRoutes key={i} {...route} />\n                ))\n              : \"\"}\n          </Switch>\n        </CSSTransition>\n      </TransitionGroup>\n    </>\n  );\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/routes/MainRouter.tsx b/src/routes/MainRouter.tsx
--- a/src/routes/MainRouter.tsx	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/src/routes/MainRouter.tsx	(date 1639415824567)
@@ -1,7 +1,7 @@
 import React, { useContext } from "react";
 import { RouteWithSubRoutes } from "./RouteWithSubRoutes";
 import { Switch } from "react-router-dom";
-import { TransitionGroup, CSSTransition } from "react-transition-group";
+//import { TransitionGroup, CSSTransition } from "react-transition-group";
 import { RoutesContext } from "./RoutesContext";
 import { useLocation } from "react-router-dom";
 export const MainRoutes = () => {
@@ -10,17 +10,11 @@
   let location = useLocation();
   return (
     <>
-      <TransitionGroup>
-        <CSSTransition key={location.pathname} classNames="fade" timeout={300}>
-          <Switch location={location}>
-            {routes
-              ? routes.map((route, i) => (
-                  <RouteWithSubRoutes key={i} {...route} />
-                ))
-              : ""}
-          </Switch>
-        </CSSTransition>
-      </TransitionGroup>
+      <Switch location={location}>
+        {routes
+          ? routes.map((route, i) => <RouteWithSubRoutes key={i} {...route} />)
+          : ""}
+      </Switch>
     </>
   );
 };
Index: src/components/CabinetPage/StructurePage/StructureContext/StructureComponentContext.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useEffect, useState } from \"react\";\n//import { getDataStructure } from \"../../../api/structure\";\nimport { getDataStrForUser } from \"../../../function/getDataStrForUser\";\nimport { IMainDataStructure } from \"../types\";\nimport { ITypeStructure, StructureContext } from \"./StructureContext\";\n\nexport const StructureComponentContext: React.FC = ({ children }) => {\n  const [dataStructure, setDataStructure] = useState<Array<IMainDataStructure>>(\n    []\n  );\n  useEffect(() => {\n    if (dataStructure.length === 0) {\n      getDataStrForUser(0, 0, dataStructure)\n        .then((res) => {\n          if (res) {\n            setDataStructure(res);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [dataStructure]);\n\n  const valContext: ITypeStructure = {\n    dataStructure: dataStructure,\n    newDataStruct: (idUser: number, idLine: number) => {\n      getDataStrForUser(idUser, idLine, dataStructure)\n        .then((res) => {\n          if (res) {\n            setDataStructure(res);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  };\n\n  return (\n    <>\n      <StructureContext.Provider value={valContext}>\n        {children}\n      </StructureContext.Provider>\n    </>\n  );\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/CabinetPage/StructurePage/StructureContext/StructureComponentContext.tsx b/src/components/CabinetPage/StructurePage/StructureContext/StructureComponentContext.tsx
--- a/src/components/CabinetPage/StructurePage/StructureContext/StructureComponentContext.tsx	(revision 83db9e2c7409b259f70da309b1ce4837e0c56b5c)
+++ b/src/components/CabinetPage/StructurePage/StructureContext/StructureComponentContext.tsx	(date 1639413851477)
@@ -36,7 +36,6 @@
         });
     },
   };
-
   return (
     <>
       <StructureContext.Provider value={valContext}>
